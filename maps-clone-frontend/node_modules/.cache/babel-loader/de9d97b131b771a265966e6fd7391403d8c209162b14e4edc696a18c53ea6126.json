{"ast":null,"code":"var _jsxFileName = \"/home/dandrade/gridsearch/maps-clone-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow\n});\nL.Marker.prototype.options.icon = DefaultIcon;\nfunction App() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [savedLocations, setSavedLocations] = useState([]);\n  useEffect(() => {\n    fetchSavedLocations();\n  }, []);\n  const fetchSavedLocations = async () => {\n    const response = await fetch('http://localhost:5000/locations');\n    const data = await response.json();\n    setSavedLocations(data);\n  };\n  const handleSearch = async e => {\n    e.preventDefault();\n    const response = await fetch(`http://localhost:5000/search?q=${searchQuery}`);\n    const data = await response.json();\n    setCurrentLocation(data);\n  };\n  const handleSave = async () => {\n    if (currentLocation) {\n      await fetch('http://localhost:5000/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(currentLocation)\n      });\n      fetchSavedLocations();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        placeholder: \"Search for a location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), currentLocation && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save Current Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [0, 0],\n      zoom: 2,\n      style: {\n        height: '400px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), currentLocation && /*#__PURE__*/_jsxDEV(Marker, {\n        position: [currentLocation.latitude, currentLocation.longitude],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: currentLocation.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), savedLocations.map(location => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [location.latitude, location.longitude],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: location.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, location.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"J/FMpXhX2aO3v+P0j+e4CVQ9ozA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","L","icon","iconShadow","jsxDEV","_jsxDEV","DefaultIcon","iconUrl","shadowUrl","prototype","options","App","_s","searchQuery","setSearchQuery","currentLocation","setCurrentLocation","savedLocations","setSavedLocations","fetchSavedLocations","response","fetch","data","json","handleSearch","e","preventDefault","handleSave","method","headers","body","JSON","stringify","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","center","zoom","style","height","width","url","position","latitude","longitude","name","map","location","id","_c","$RefreshReg$"],"sources":["/home/dandrade/gridsearch/maps-clone-frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\n\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [savedLocations, setSavedLocations] = useState([]);\n\n  useEffect(() => {\n    fetchSavedLocations();\n  }, []);\n\n  const fetchSavedLocations = async () => {\n    const response = await fetch('http://localhost:5000/locations');\n    const data = await response.json();\n    setSavedLocations(data);\n  };\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    const response = await fetch(`http://localhost:5000/search?q=${searchQuery}`);\n    const data = await response.json();\n    setCurrentLocation(data);\n  };\n\n  const handleSave = async () => {\n    if (currentLocation) {\n      await fetch('http://localhost:5000/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(currentLocation),\n      });\n      fetchSavedLocations();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          placeholder=\"Search for a location\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {currentLocation && (\n        <button onClick={handleSave}>Save Current Location</button>\n      )}\n      <MapContainer center={[0, 0]} zoom={2} style={{ height: '400px', width: '100%' }}>\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n        {currentLocation && (\n          <Marker position={[currentLocation.latitude, currentLocation.longitude]}>\n            <Popup>{currentLocation.name}</Popup>\n          </Marker>\n        )}\n        {savedLocations.map((location) => (\n          <Marker key={location.id} position={[location.latitude, location.longitude]}>\n            <Popup>{location.name}</Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}